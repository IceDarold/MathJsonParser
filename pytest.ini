[tool:pytest]
# Pytest configuration for MathIR Parser testing

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output and execution options
addopts =
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes
    --durations=10
    --maxfail=5
    --cov=mathir_parser
    --cov=tests/utils
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80
    -n auto
    --maxfail=10

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    end_to_end: End-to-end workflow tests
    regression: Regression tests for previously fixed issues
    stress: Stress and performance tests
    slow: Tests that take a long time to run
    mathematical: Tests involving mathematical computations
    symbolic: Tests involving symbolic mathematics
    numerical: Tests involving numerical computations
    edge_case: Tests for edge cases and error conditions
    performance: Performance and benchmarking tests
    memory: Memory usage tests
    timeout: Tests with timeout requirements
    parametrized: Parametrized tests with multiple inputs
    fixture_based: Tests using fixture data
    validation: Schema and data validation tests
    latex_parsing: LaTeX parsing specific tests
    sympy_conversion: SymPy conversion specific tests
    runtime_context: Runtime context specific tests
    benchmark: Benchmark tests

# Test filtering
minversion = 6.0
required_plugins =
    pytest-xdist
    pytest-cov
    pytest-timeout
    pytest-benchmark

# Timeout settings
timeout = 300
timeout_method = thread

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    error::FutureWarning